// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: http/rpc/pb/dindin.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{0}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName  string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Slack_UID string `protobuf:"bytes,2,opt,name=slack_UID,json=slackUID,proto3" json:"slack_UID,omitempty"`
}

func (x *GetMembersResponse) Reset() {
	*x = GetMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMembersResponse) ProtoMessage() {}

func (x *GetMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMembersResponse.ProtoReflect.Descriptor instead.
func (*GetMembersResponse) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{1}
}

func (x *GetMembersResponse) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *GetMembersResponse) GetSlack_UID() string {
	if x != nil {
		return x.Slack_UID
	}
	return ""
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int64 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int64 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int64 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{2}
}

func (x *Date) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type CookAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      *Date  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Slack_UID string `protobuf:"bytes,2,opt,name=slack_UID,json=slackUID,proto3" json:"slack_UID,omitempty"`
}

func (x *CookAssignment) Reset() {
	*x = CookAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookAssignment) ProtoMessage() {}

func (x *CookAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookAssignment.ProtoReflect.Descriptor instead.
func (*CookAssignment) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{3}
}

func (x *CookAssignment) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CookAssignment) GetSlack_UID() string {
	if x != nil {
		return x.Slack_UID
	}
	return ""
}

type AssignCooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*CookAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *AssignCooksRequest) Reset() {
	*x = AssignCooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignCooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignCooksRequest) ProtoMessage() {}

func (x *AssignCooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignCooksRequest.ProtoReflect.Descriptor instead.
func (*AssignCooksRequest) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{4}
}

func (x *AssignCooksRequest) GetAssignments() []*CookAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type EmptyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{5}
}

type UpcomingCooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaysWanted int64 `protobuf:"varint,1,opt,name=days_wanted,json=daysWanted,proto3" json:"days_wanted,omitempty"`
}

func (x *UpcomingCooksRequest) Reset() {
	*x = UpcomingCooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpcomingCooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpcomingCooksRequest) ProtoMessage() {}

func (x *UpcomingCooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpcomingCooksRequest.ProtoReflect.Descriptor instead.
func (*UpcomingCooksRequest) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{6}
}

func (x *UpcomingCooksRequest) GetDaysWanted() int64 {
	if x != nil {
		return x.DaysWanted
	}
	return 0
}

type Meal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            *Date  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	CookSlack_UID   string `protobuf:"bytes,2,opt,name=cook_slack_UID,json=cookSlackUID,proto3" json:"cook_slack_UID,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SlackMessage_ID string `protobuf:"bytes,4,opt,name=slack_message_ID,json=slackMessageID,proto3" json:"slack_message_ID,omitempty"`
	FullName        string `protobuf:"bytes,5,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
}

func (x *Meal) Reset() {
	*x = Meal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meal) ProtoMessage() {}

func (x *Meal) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meal.ProtoReflect.Descriptor instead.
func (*Meal) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{7}
}

func (x *Meal) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Meal) GetCookSlack_UID() string {
	if x != nil {
		return x.CookSlack_UID
	}
	return ""
}

func (x *Meal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Meal) GetSlackMessage_ID() string {
	if x != nil {
		return x.SlackMessage_ID
	}
	return ""
}

func (x *Meal) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type UpcomingCooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meals []*Meal `protobuf:"bytes,1,rep,name=Meals,proto3" json:"Meals,omitempty"`
}

func (x *UpcomingCooksResponse) Reset() {
	*x = UpcomingCooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_rpc_pb_dindin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpcomingCooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpcomingCooksResponse) ProtoMessage() {}

func (x *UpcomingCooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_rpc_pb_dindin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpcomingCooksResponse.ProtoReflect.Descriptor instead.
func (*UpcomingCooksResponse) Descriptor() ([]byte, []int) {
	return file_http_rpc_pb_dindin_proto_rawDescGZIP(), []int{8}
}

func (x *UpcomingCooksResponse) GetMeals() []*Meal {
	if x != nil {
		return x.Meals
	}
	return nil
}

var File_http_rpc_pb_dindin_proto protoreflect.FileDescriptor

var file_http_rpc_pb_dindin_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x28,
	0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x4b, 0x0a, 0x0e,
	0x43, 0x6f, 0x6f, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22, 0xb3,
	0x01, 0x0a, 0x04, 0x4d, 0x65, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x5f, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6f, 0x6b, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x05, 0x4d, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x05, 0x4d, 0x65, 0x61, 0x6c, 0x73, 0x32, 0xe9, 0x02,
	0x0a, 0x0c, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36,
	0x0a, 0x0e, 0x45, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6d, 0x6f, 0x72, 0x72, 0x6f, 0x77,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x34, 0x0a, 0x0c, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0d, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f,
	0x6b, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x64, 0x72, 0x69, 0x74, 0x7a, 0x65, 0x6e,
	0x68, 0x6f, 0x66, 0x66, 0x2f, 0x64, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_rpc_pb_dindin_proto_rawDescOnce sync.Once
	file_http_rpc_pb_dindin_proto_rawDescData = file_http_rpc_pb_dindin_proto_rawDesc
)

func file_http_rpc_pb_dindin_proto_rawDescGZIP() []byte {
	file_http_rpc_pb_dindin_proto_rawDescOnce.Do(func() {
		file_http_rpc_pb_dindin_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_rpc_pb_dindin_proto_rawDescData)
	})
	return file_http_rpc_pb_dindin_proto_rawDescData
}

var file_http_rpc_pb_dindin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_http_rpc_pb_dindin_proto_goTypes = []interface{}{
	(*PingResponse)(nil),          // 0: pb.PingResponse
	(*GetMembersResponse)(nil),    // 1: pb.GetMembersResponse
	(*Date)(nil),                  // 2: pb.Date
	(*CookAssignment)(nil),        // 3: pb.CookAssignment
	(*AssignCooksRequest)(nil),    // 4: pb.AssignCooksRequest
	(*EmptyMessage)(nil),          // 5: pb.EmptyMessage
	(*UpcomingCooksRequest)(nil),  // 6: pb.UpcomingCooksRequest
	(*Meal)(nil),                  // 7: pb.Meal
	(*UpcomingCooksResponse)(nil), // 8: pb.UpcomingCooksResponse
}
var file_http_rpc_pb_dindin_proto_depIdxs = []int32{
	2,  // 0: pb.CookAssignment.date:type_name -> pb.Date
	3,  // 1: pb.AssignCooksRequest.assignments:type_name -> pb.CookAssignment
	2,  // 2: pb.Meal.date:type_name -> pb.Date
	7,  // 3: pb.UpcomingCooksResponse.Meals:type_name -> pb.Meal
	5,  // 4: pb.SlackActions.EatingTomorrow:input_type -> pb.EmptyMessage
	5,  // 5: pb.SlackActions.Ping:input_type -> pb.EmptyMessage
	5,  // 6: pb.SlackActions.GetMembers:input_type -> pb.EmptyMessage
	5,  // 7: pb.SlackActions.WeeklyUpdate:input_type -> pb.EmptyMessage
	4,  // 8: pb.SlackActions.AssignCooks:input_type -> pb.AssignCooksRequest
	6,  // 9: pb.SlackActions.UpcomingCooks:input_type -> pb.UpcomingCooksRequest
	5,  // 10: pb.SlackActions.EatingTomorrow:output_type -> pb.EmptyMessage
	0,  // 11: pb.SlackActions.Ping:output_type -> pb.PingResponse
	1,  // 12: pb.SlackActions.GetMembers:output_type -> pb.GetMembersResponse
	5,  // 13: pb.SlackActions.WeeklyUpdate:output_type -> pb.EmptyMessage
	5,  // 14: pb.SlackActions.AssignCooks:output_type -> pb.EmptyMessage
	8,  // 15: pb.SlackActions.UpcomingCooks:output_type -> pb.UpcomingCooksResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_http_rpc_pb_dindin_proto_init() }
func file_http_rpc_pb_dindin_proto_init() {
	if File_http_rpc_pb_dindin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_rpc_pb_dindin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignCooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpcomingCooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_rpc_pb_dindin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpcomingCooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_rpc_pb_dindin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_http_rpc_pb_dindin_proto_goTypes,
		DependencyIndexes: file_http_rpc_pb_dindin_proto_depIdxs,
		MessageInfos:      file_http_rpc_pb_dindin_proto_msgTypes,
	}.Build()
	File_http_rpc_pb_dindin_proto = out.File
	file_http_rpc_pb_dindin_proto_rawDesc = nil
	file_http_rpc_pb_dindin_proto_goTypes = nil
	file_http_rpc_pb_dindin_proto_depIdxs = nil
}
